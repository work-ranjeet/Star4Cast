angular.module("angular.translate",[]).factory("Dictionary",["$http","$q","$timeout",function(e,n,t){return function(){var a=this;this.current={},this.language=!1,this.languages={},this.extend=function(e,r){var u=n.defer();return t(function(){a.languages[e]||(a.languages[e]={}),angular.extend(a.languages[e],r),u.resolve(a.languages[e])}),u.promise},this.add=function(r,u){var g=n.defer();return t(function(){a.languages[r]||(a.languages[r]={}),angular.isObject(u)?(angular.extend(a.languages[r],u),g.resolve(a.languages[r])):"string"==typeof u?e.get(u).then(function(e){angular.extend(a.languages[r],e.data),g.resolve(a.languages[r])}).catch(function(){g.reject("Could not get file")}):g.reject("[angular-translate] Invalid source: "+u.toString())}),g.promise},this.switchTo=function(e){return a.languages[e]?(a.language=e,a.current=a.languages[e],a.current):!1},this.use=function(e,t){var r=n.defer();return t?this.load(e.src).then(function(){var n=a.switchTo(e);success?r.resolve(n):r.reject("Could not load language "+e)}).catch(r.reject):r.resolve(a.switchTo(e)),r.promise}}}]).filter("translate",["$log",function(){return function(e,n){return n&&n[e]?n[e]:e}}]);